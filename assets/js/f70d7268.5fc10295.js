"use strict";(self.webpackChunksermas_eu_github_io=self.webpackChunksermas_eu_github_io||[]).push([[95],{4544:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var t=i(4848),o=i(8453);const s={sidebar_position:.008},l="Configuring LLMs",a={id:"configuring-llm",title:"Configuring LLMs",description:"Follow some guidance to configure different LLM providers from those supported.",source:"@site/docs/configuring-llm.md",sourceDirName:".",slug:"/configuring-llm",permalink:"/docs/configuring-llm",draft:!1,unlisted:!1,editUrl:"https://github.com/sermas-eu/sermas-eu.github.io/sidebar.ts/docs/configuring-llm.md",tags:[],version:"current",sidebarPosition:.008,frontMatter:{sidebar_position:.008},sidebar:"tutorialSidebar",previous:{title:"Customizing the application",permalink:"/docs/customize-application"},next:{title:"SERMAS CLI",permalink:"/docs/category/sermas-cli"}},r={},c=[{value:"Configuring Ollama",id:"configuring-ollama",level:2},{value:"Start ollama",id:"start-ollama",level:3},{value:"Configure the SERMAS Toolkit API",id:"configure-the-sermas-toolkit-api",level:3},{value:"Configuring the application settings",id:"configuring-the-application-settings",level:3},{value:"Updating the application",id:"updating-the-application",level:3}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"configuring-llms",children:"Configuring LLMs"})}),"\n",(0,t.jsx)(n.p,{children:"Follow some guidance to configure different LLM providers from those supported."}),"\n",(0,t.jsxs)(n.p,{children:["See also ",(0,t.jsx)(n.a,{href:"https://github.com/sermas-eu/sermas-api/blob/main/libs/sermas/sermas.defaults.ts",children:"the default configuration"})," that can be overridden with environment variables."]}),"\n",(0,t.jsxs)(n.p,{children:["If you followed the getting started guide, ensure you have the latest images with ",(0,t.jsx)(n.code,{children:"docker compose pull"})]}),"\n",(0,t.jsx)(n.h2,{id:"configuring-ollama",children:"Configuring Ollama"}),"\n",(0,t.jsx)(n.p,{children:"Let's setup a local LLMs service to run inference."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"NOTE"})})," The LLM may use the GPU to improve performance, however the available resources may not be enough to complete all the requests."]}),"\n",(0,t.jsx)(n.h3,{id:"start-ollama",children:"Start ollama"}),"\n",(0,t.jsxs)(n.p,{children:["See the ",(0,t.jsx)(n.a,{href:"https://ollama.com/",children:"ollama docs"})," to start the service and obtain a model."]}),"\n",(0,t.jsxs)(n.p,{children:["We will use ",(0,t.jsx)(n.code,{children:"phi3"})," for chat and ",(0,t.jsx)(n.code,{children:"nomic-embed-text"})," for embeddings."]}),"\n",(0,t.jsx)(n.p,{children:"Download the models with"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"ollama pull phi3\nollama pull nomic-embed-text\n"})}),"\n",(0,t.jsx)(n.h3,{id:"configure-the-sermas-toolkit-api",children:"Configure the SERMAS Toolkit API"}),"\n",(0,t.jsxs)(n.p,{children:["Locate the file ",(0,t.jsx)(n.code,{children:"./data/api/.env"})," and add the following configurations"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ini",children:"OLLAMA_URL=http://172.17.0.1:11434\n\nOLLAMA_MODEL=phi3\nOLLAMA_CHAT_MODELS=phi3:*\n\nOLLAMA_EMBEDDINGS_MODEL=nomic-embed-text\n\nLLM_SERVICE=ollama\nLLM_EMBEDDINGS_SERVICE=ollama\n"})}),"\n",(0,t.jsxs)(n.p,{children:["then restart the api with ",(0,t.jsx)(n.code,{children:"docker compose restart api"})]}),"\n",(0,t.jsx)(n.h3,{id:"configuring-the-application-settings",children:"Configuring the application settings"}),"\n",(0,t.jsx)(n.p,{children:"In settings.yaml or app.yaml settings section add the following lines"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"llm:\n  chat: ollama/phi3\n  tools: ollama/phi3\n  sentiment: ollama/phi3\n  tasks: ollama/phi3\n  intent: ollama/phi3\n  translation: ollama/phi3\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The pattern to follow is ",(0,t.jsx)(n.code,{children:"[provider]/[model]"}),". The list of available models is visible in the kiosk UI, opening the left menu, under LLM settings"]}),"\n",(0,t.jsx)(n.p,{children:"This allow to select the phi3 model for all the types of inference in the system. Depending on the setup, those could be changed to work with different providers and models configured."}),"\n",(0,t.jsx)(n.h3,{id:"updating-the-application",children:"Updating the application"}),"\n",(0,t.jsxs)(n.p,{children:["Reimport the app from the CLI ",(0,t.jsx)(n.code,{children:"sermas-cli app save /apps/myapp"})]}),"\n",(0,t.jsxs)(n.p,{children:["Reloading the page at ",(0,t.jsx)(n.a,{href:"http://localhost:8080",children:"http://localhost:8080"})," you can start using the configured ollama model."]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>a});var t=i(6540);const o={},s=t.createContext(o);function l(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);