"use strict";(self.webpackChunksermas_eu_github_io=self.webpackChunksermas_eu_github_io||[]).push([[9508],{4324:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>g});const i=JSON.parse('{"id":"agent/llm/huggingface","title":"Hugging Face","description":"Hugging Face offers a Pro subscription for LLM inference and custom hardware for enterprise usage","source":"@site/docs/agent/llm/huggingface.md","sourceDirName":"agent/llm","slug":"/agent/llm/huggingface","permalink":"/docs/agent/llm/huggingface","draft":false,"unlisted":false,"editUrl":"https://github.com/sermas-eu/sermas-eu.github.io/sidebar.ts/docs/agent/llm/huggingface.md","tags":[],"version":"current","sidebarPosition":0.00016,"frontMatter":{"sidebar_position":0.00016},"sidebar":"tutorialSidebar","previous":{"title":"Groq","permalink":"/docs/agent/llm/groq"},"next":{"title":"Antrophic","permalink":"/docs/agent/llm/antrophic"}}');var o=t(4848),a=t(8453);const r={sidebar_position:16e-5},s="Hugging Face",c={},g=[{value:"Configure the Toolkit API",id:"configure-the-toolkit-api",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"hugging-face",children:"Hugging Face"})}),"\n",(0,o.jsx)(n.p,{children:"Hugging Face offers a Pro subscription for LLM inference and custom hardware for enterprise usage"}),"\n",(0,o.jsxs)(n.p,{children:["Check Hugging Face docs to ",(0,o.jsx)(n.a,{href:"https://huggingface.co/docs/hub/en/security-tokens",children:"create a token"})]}),"\n",(0,o.jsx)(n.h2,{id:"configure-the-toolkit-api",children:"Configure the Toolkit API"}),"\n",(0,o.jsxs)(n.p,{children:["Locate the file ",(0,o.jsx)(n.code,{children:"./config/api/.env"})," and add the following configurations"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ini",children:"LLM_SERVICE=huggingface\n\n# HUGGINGFACE_API_KEY Provide a Hugging Face token. \n# Note: HF_TOKEN will be used as fallback, if set\nHUGGINGFACE_API_KEY='HF token'\n# HUGGINGFACE_CHAT_MODELS Supported chat models from Hugging Face. Leave empty to allow any.\n# HUGGINGFACE_CHAT_MODELS=''\n\n# HUGGINGFACE_BASEURL Base URL for Hugging Face inference service\n# Set this for custom inference endpoint or to point to completion compatible backend such as vLLM\n# HUGGINGFACE_BASEURL=''\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Note that huggingface models have an addtional / in the name.\nA format like ",(0,o.jsx)(n.code,{children:"huggingface/meta-llama/Meta-Llama-3.1-8B-Instruct"})," is correct."]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>s});var i=t(6540);const o={},a=i.createContext(o);function r(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);