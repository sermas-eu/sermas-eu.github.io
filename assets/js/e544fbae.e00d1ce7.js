"use strict";(self.webpackChunksermas_eu_github_io=self.webpackChunksermas_eu_github_io||[]).push([[203],{3725:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var t=a(4848),i=a(8453);const o={sidebar_position:.006},s="Customizing the application",r={id:"customize-application",title:"Customizing the application",description:"The application folder is composed of differents parts and we are going to cover them in this page",source:"@site/docs/customize-application.md",sourceDirName:".",slug:"/customize-application",permalink:"/docs/customize-application",draft:!1,unlisted:!1,editUrl:"https://github.com/sermas-eu/sermas-eu.github.io/sidebar.ts/docs/customize-application.md",tags:[],version:"current",sidebarPosition:.006,frontMatter:{sidebar_position:.006},sidebar:"tutorialSidebar",previous:{title:"Create an application",permalink:"/docs/create-application"},next:{title:"Configuring LLMs",permalink:"/docs/configuring-llm"}},l={},c=[{value:"app.yaml",id:"appyaml",level:2},{value:"modules.yaml",id:"modulesyaml",level:3},{value:"settings.yaml",id:"settingsyaml",level:3},{value:"Repository",id:"repository",level:2},{value:"avatars",id:"avatars",level:3},{value:"backgrounds",id:"backgrounds",level:3},{value:"documents",id:"documents",level:3},{value:"robots",id:"robots",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"customizing-the-application",children:"Customizing the application"})}),"\n",(0,t.jsx)(n.p,{children:"The application folder is composed of differents parts and we are going to cover them in this page"}),"\n",(0,t.jsxs)(n.p,{children:["Definition can be in ",(0,t.jsx)(n.code,{children:"JSON"})," (.json) or ",(0,t.jsx)(n.code,{children:"YAML"})," (.yaml, .yml)"]}),"\n",(0,t.jsx)(n.h2,{id:"appyaml",children:"app.yaml"}),"\n",(0,t.jsx)(n.p,{children:"The application definition is the core of a SERMAS application"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"# the app name\nname: My app\n\n# provides a friendly name for the applicaiton\ndescription: My cool assistant\n\n# indicate if the app should be listed to unautheticated users\npublic: true\n\n"})}),"\n",(0,t.jsx)(n.h3,{id:"modulesyaml",children:"modules.yaml"}),"\n",(0,t.jsx)(n.p,{children:"A list of modules with enabled permission to access specific resources. Each module will create a client with credentials to obtaing access tokens."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"- moduleId: avatar\n  # secret will be used as client secret. \n  # Leave empty to generate on.\n  secret: null\n  \n  # List of supported modules.\n  # Each module has a set of permissions applied to its client.\n\n  # The full list of available permissions is available at\n  # http://localhost:8080/api/swagger#/PLATFORM/getSettings\n\n  # Definition supports dotted notation eg. `detection.user` or `detection.*` which is (same as just `detection`)\n  supports:\n    - dialogue\n    - detection\n    - ui\n    - session\n    - platform\n\n  # additional module-specific configuration, free-form key-value store\n  config: {}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"settingsyaml",children:"settings.yaml"}),"\n",(0,t.jsx)(n.p,{children:"Settings allows to configure some aspects of the applicaitons"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"\n\n# requires login\n# if set to true, the application will require the user to login\nlogin: false\n\n# id of the default avatar\n# taken from repository -> avatars -> id\navatar: anna\n\n# background for the avatar\n# taken from repository -> backgrounds -> id\nbackground: milkyway\n\n# language of the avatar, this may depend on the TTS/STT choosen. \n# It will be also used to translate conversation as needed\nlanguage: en-GB\n\n# LLM provider, defaults to OpenAI\nllm: default\n\n# default avatar prompt, this will be used as baseline in conversations.\n# This prompt defines the overall direction of the conversation along with the avatar specific prompt\nprompt:\n  text: >-\n    You are a proven chef helping users cook delicious and healthly meals.\n"})}),"\n",(0,t.jsx)(n.h2,{id:"repository",children:"Repository"}),"\n",(0,t.jsx)(n.p,{children:"The CLI will scan for assets to be uploaded along with configurations."}),"\n",(0,t.jsxs)(n.p,{children:["To add additional metadata to an asset, use the pattern ",(0,t.jsx)(n.code,{children:"<filename.ext>.[json|yaml]"})," or ",(0,t.jsx)(n.code,{children:"<filename>.[json|yaml]"}),".\nAn example"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"# Asset file\nrepository/avatar/myavatar.glb\n\n# Matching metadata file(s). Both .json and .yaml extensions works\nrepository/avatar/myavatar.glb.yaml\nrepository/avatar/myavatar.yaml\n\n"})}),"\n",(0,t.jsx)(n.p,{children:"An example structure using metadata follows"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"repository\n\u251c\u2500\u2500 avatars\n\u2502   \u2514\u2500\u2500 anna.yaml\n\u251c\u2500\u2500 backgrounds\n\u2502   \u251c\u2500\u2500 milkyway.jpg\n\u2502   \u2514\u2500\u2500 milkyway.jpg.yaml # matching metadata for milkyway.jpg\n\u251c\u2500\u2500 documents \n\u2502   \u251c\u2500\u2500 about.txt\n\u2502   \u251c\u2500\u2500 about.yaml # matching metadata for about.txt\n\u2502   \u251c\u2500\u2500 toolkit.txt\n\u2502   \u2514\u2500\u2500 toolkit.yaml\n\u2514\u2500\u2500 robots\n    \u2514\u2500\u2500 my-agv.yaml\n"})}),"\n",(0,t.jsx)(n.h3,{id:"avatars",children:"avatars"}),"\n",(0,t.jsx)(n.p,{children:"Define avatars to be used in conversations."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"# path to the asset, will be updated with a matching *.glb if found locally\npath: joe/654cc759f1a79ed2ebab0207.glb\nlicense: https://creativecommons.org/licenses/by-nc/4.0/\n# This parameter is required to correctly select a TTS engine, unfortunately those are in general binary!\ngender: M\n# Avatar full name\nname: Antoine\n# Prompt to characterize the avatar personality, use it to refine the interaction capabilities of the avatar.\nprofile: Antoine is a chef specialized in French cusine.\n"})}),"\n",(0,t.jsx)(n.h3,{id:"backgrounds",children:"backgrounds"}),"\n",(0,t.jsx)(n.p,{children:"List of backgrounds used in the kisok presentation. It should have a size of about 1920x1280 in a web compatible format (eg. jpeg or png)"}),"\n",(0,t.jsx)(n.h3,{id:"documents",children:"documents"}),"\n",(0,t.jsx)(n.p,{children:"List of text documents to import as vectors. Those can be used to provide refined answers to the users leveraging on RAG (retrieve augmented generation)"}),"\n",(0,t.jsx)(n.h3,{id:"robots",children:"robots"}),"\n",(0,t.jsx)(n.p,{children:"Configuration to interface to a robot."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"# Name of the robot\nname: My AGV\n# URL to a video streaming source\nvideoUrl: http://robot.local:8099\n# In case of an AGV we can show the area map from the kiosk\nmap:\n  # URL of the map image\n  imageUrl: http://robot.local/map.png\n  # Size of the image\n  width: 640\n  height: 480\n  # robot initial position\n  originOffsetX: 10\n  originOffsetY: 10\n"})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>s,x:()=>r});var t=a(6540);const i={},o=t.createContext(i);function s(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);